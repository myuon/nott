#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass jsarticle
\begin_preamble
\usepackage{syntax}
\end_preamble
\options uplatex,a4paper,dvipdfmx
\use_default_options true
\begin_modules
theorems-ams
\end_modules
\maintain_unincluded_children false
\language japanese
\language_package default
\inputencoding utf8-platex
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format pdf3
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\topmargin 25mm
\bottommargin 25mm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
untyped 
\begin_inset Formula $\lambda$
\end_inset

-calculus
\end_layout

\begin_layout Author
myuon
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
Syntax
\end_layout

\begin_layout Subsection
ラムダ項
\end_layout

\begin_layout Definition
\begin_inset Formula $\lambda$
\end_inset

項
\end_layout

\begin_layout Definition

\series bold
\begin_inset Formula $\lambda$
\end_inset

項
\series default
が次で定義される.
 また, こうして定義された
\begin_inset Formula $\lambda$
\end_inset

項の集合を
\begin_inset Formula $\Lambda$
\end_inset

とかく.
\end_layout

\begin_layout Definition
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{grammar}
\end_layout

\begin_layout Plain Layout

  <lambda> ::= <var> 
\backslash
alt $
\backslash
lambda$ <var> `.' <lambda> 
\backslash
alt <lambda> <lambda>
\end_layout

\begin_layout Plain Layout


\backslash
end{grammar}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
ただし, 
\begin_inset Formula $\langle\text{var}\rangle$
\end_inset

とは変数のことであり, ここでは適当な変数の集合
\begin_inset Formula $V$
\end_inset

が与えられているとしている.
 変数を以下では
\begin_inset Formula $a,b,c,\dots$
\end_inset

あるいは
\begin_inset Formula $v_{0},v_{1},v_{2},\dots$
\end_inset

などと書く.
\end_layout

\begin_layout Standard
上の2番目の規則を
\series bold
関数抽象
\series default
, 3番目の規則を
\series bold
関数適用
\series default
と呼ぶ.
\end_layout

\begin_layout Standard
関数抽象とは項に出現する(かもしれない)変数を1つ固定してそれに依存する関数を作る操作であり, 関数適用とは関数を項へ適用
\begin_inset Foot
status open

\begin_layout Plain Layout
よく間違えられるが, ``関数
\begin_inset Quotes erd
\end_inset

を``値
\begin_inset Quotes erd
\end_inset

へ適用する.
 逆ではない.
\end_layout

\end_inset

する操作のことである.
 例えば2乗関数 
\begin_inset Formula $f(x)=x^{2}$
\end_inset

は項
\begin_inset Formula $x^{2}$
\end_inset

に出現する変数
\begin_inset Formula $x$
\end_inset

に依存した関数
\begin_inset Formula $f$
\end_inset

を定義している.
 よってこれは
\begin_inset Formula $\lambda$
\end_inset

項風にかけば 
\begin_inset Formula $\lambda x.\ x^{2}$
\end_inset

であり, この関数を10に適用した
\begin_inset Formula $f(10)$
\end_inset

は
\begin_inset Formula $f\ 10$
\end_inset

である
\begin_inset Foot
status open

\begin_layout Plain Layout
ここでは2乗や10といった値は
\begin_inset Formula $\lambda$
\end_inset

項ではないので厳密にはこれらは
\begin_inset Formula $\lambda$
\end_inset

項ではない
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
関数適用は左結合(
\begin_inset Formula $M_{1}M_{2}M_{3}=(M_{1}M_{2})M_{3}$
\end_inset

)であり, 関数抽象よりも結合の優先順位が高い(
\begin_inset Formula $\lambda x.\ M_{1}M_{2}=\lambda x.\ (M_{1}M_{2})$
\end_inset

).
\end_layout

\begin_layout Standard
さて, 関数抽象とは関数を定義することであったが, 通常変数の名前の付け替えにはよらない.
 平たくいえば,
\begin_inset Formula $f(x)=x$
\end_inset

と
\begin_inset Formula $f(y)=y$
\end_inset

は通常区別しない.
 このような名前の付け替えを行う変換のことを, 
\begin_inset Formula $\alpha$
\end_inset

変換とよぶ.
\end_layout

\begin_layout Definition
\begin_inset Formula $x,y$
\end_inset

を変数, 
\begin_inset Formula $M$
\end_inset

を
\begin_inset Formula $\lambda$
\end_inset

項とするとき, 次の操作を
\series bold

\begin_inset Formula $\alpha$
\end_inset

変換
\series default
とよぶ.
\end_layout

\begin_layout Definition
\begin_inset Formula 
\[
\lambda x.\ M\quad\longrightarrow\quad\lambda y.\ M[y/x]
\]

\end_inset


\end_layout

\begin_layout Definition
ただし
\begin_inset Formula $M[y/x]$
\end_inset

とは項
\begin_inset Formula $M$
\end_inset

に出現する変数
\begin_inset Formula $x$
\end_inset

を全て
\begin_inset Formula $y$
\end_inset

に置き換えた項を表す.
 正確には, 次のようにして代入が定義される:
\end_layout

\begin_layout Definition
\begin_inset Formula 
\begin{eqnarray*}
-[-/-] & : & \Lambda\times\Lambda\times V\to\Lambda\\
x[N/x] & = & N\\
y[N/x] & = & y\ (x\neq y)\\
(\lambda y.\ M)[N/x] & = & \lambda y.\ M[N/x]\\
(M_{1}M_{2})[N/x] & = & M_{1}[N/x]\ M_{2}[N/x]
\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Definition
\begin_inset Formula $\alpha$
\end_inset

変換から生成される
\begin_inset Formula $\Lambda$
\end_inset

上の同値関係を
\begin_inset Formula $\alpha$
\end_inset

同値とよび, 
\begin_inset Formula $=_{\alpha}$
\end_inset

とかく.
\end_layout

\begin_layout Subsection
評価
\end_layout

\begin_layout Standard
ここではラムダ項を別のラムダ項に変換することを考える.
 ラムダ項の変換のことを評価・計算と呼んだりする.
\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\tobeta}{\to_{\beta}}
\end_inset


\end_layout

\begin_layout Definition
\begin_inset Argument 1
status open

\begin_layout Plain Layout
\begin_inset Formula $\beta$
\end_inset

変換
\end_layout

\end_inset


\end_layout

\begin_layout Definition

\series bold
\begin_inset Formula $\beta$
\end_inset

変換
\series default
を次のように定義する.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $M\tobeta N$
\end_inset

のとき, 
\begin_inset Formula $\lambda x.M\tobeta\lambda x.N$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $M\tobeta N$
\end_inset

のとき, 
\begin_inset Formula $ML\tobeta NL$
\end_inset

, 
\begin_inset Formula $LM\tobeta LN$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $(\lambda x.M)N\tobeta M[N/x]$
\end_inset


\end_layout

\begin_layout Standard
4番目の規則のことを
\begin_inset Formula $\beta$
\end_inset

簡約と呼ぶ.
\end_layout

\begin_layout Subsection
値と評価戦略
\end_layout

\begin_layout Standard
ラムダ計算をプログラミング言語とみなす立場では, プログラムの実行に相当する, 与えられたラムダ項を別のラムダ項に変換する決定的な手続きが必要になる.
 ところでラムダ項の評価は基本的に前述の
\begin_inset Formula $\beta$
\end_inset

簡約を基本とするが, 一般にラムダ項には複数の
\begin_inset Formula $\beta$
\end_inset

基が含まれており, それらをどの順番で評価するかによって結果は異なってくる.
 このようなラムダ項の簡約の手順のことを評価戦略とよぶ.
\end_layout

\begin_layout Standard
以前の
\begin_inset Formula $\beta$
\end_inset

変換では, 
\begin_inset Formula $M\tobeta N$
\end_inset

が
\begin_inset Formula $M$
\end_inset

の``いずれかの
\begin_inset Quotes erd
\end_inset


\begin_inset Formula $\beta$
\end_inset

基を変換することで
\begin_inset Formula $N$
\end_inset

が得られる, ということを表していたのに対し, ここで考えるような評価戦略では実際にどの
\begin_inset Formula $\beta$
\end_inset

基を変換するかまで常に指定されている, という違いがある.
\end_layout

\begin_layout Subsubsection
値
\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\Val}{\text{Val}}
\end_inset


\end_layout

\begin_layout Definition
\begin_inset Argument 1
status open

\begin_layout Plain Layout
値
\end_layout

\end_inset


\end_layout

\begin_layout Definition
値の集合
\begin_inset Formula $\Val$
\end_inset

を次のように定義する.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $M\in\Lambda\Longrightarrow\lambda x.M\in\Val$
\end_inset


\end_layout

\begin_layout Section
Operational Semantics
\end_layout

\begin_layout Subsection
call-by-value
\end_layout

\begin_layout Standard
call-by-valueは値呼びと呼ばれる.
 また, 一番外側のラムダ項を左から順に簡約するのでleftmost-outermost reductionとも呼ばれる.
\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\tocbv}{\to_{\text{cbv}}}
\end_inset


\end_layout

\begin_layout Definition
\begin_inset Argument 1
status open

\begin_layout Plain Layout
call-by-value
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $(\lambda x.M)v\tocbv M[v/x]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $M\tocbv N$
\end_inset

のとき, 
\begin_inset Formula $vM\tocbv vN$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $M\tocbv N$
\end_inset

のとき, 
\begin_inset Formula $ML\tocbv NL$
\end_inset


\end_layout

\begin_layout Standard
今は関数抽象を値と見ているので, 関数抽象はそれ以上簡約せずそのままにしておくことに注意.
\end_layout

\begin_layout Standard
あるいは, これはevaluation contextを用いて定義することもできる.
\end_layout

\begin_layout Definition
\begin_inset Argument 1
status open

\begin_layout Plain Layout
call-by-value
\end_layout

\end_inset


\end_layout

\begin_layout Definition

\series bold
evaluation context
\series default
を次とする:
\end_layout

\begin_layout Definition
\begin_inset Formula 
\[
C=[]\ |\ (C\:e)\ |\ (v\:C)\ 
\]

\end_inset


\end_layout

\begin_layout Definition
\begin_inset Formula $e$
\end_inset

はラムダ項, 
\begin_inset Formula $v$
\end_inset

は値(ここでは関数抽象)とする.
 
\begin_inset Formula $[]$
\end_inset

は穴(hole)とよばれ, ここに好きなラムダ項を後で挿入できる.
 これを用いてcall-by-valueのreductionを次のように定義することができる.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $(\lambda x.M)v\tocbv M[v/x]$
\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula $M\tocbv M'$
\end_inset

のとき, 
\begin_inset Formula $C[M]\tocbv C[M']$
\end_inset


\end_layout

\begin_layout Standard
evaluation contextの3番目の規則が
\begin_inset Formula $(v\:C)$
\end_inset

となっていることに注意.
 これによって, 関数適用の項を簡約するときは必ず前から(前にある項がvalueになっている時)しか簡約できない.
\end_layout

\end_body
\end_document
